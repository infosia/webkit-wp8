/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.playcontrol.logger;

public class Logger implements LoggerConstants {
  public static void GetLinkedVersion(LoggerVersion ver) {
    LoggerJNI.GetLinkedVersion(LoggerVersion.getCPtr(ver), ver);
  }

  public static int IsCompiledWithLocking() {
    return LoggerJNI.IsCompiledWithLocking();
  }

  public static CLogger Create() {
    long cPtr = LoggerJNI.Create();
    return (cPtr == 0) ? null : new CLogger(cPtr, true);
  }

  public static CLogger CreateWithName(String base_name) {
    long cPtr = LoggerJNI.CreateWithName(base_name);
    return (cPtr == 0) ? null : new CLogger(cPtr, true);
  }

  public static void Free(CLogger logger) {
    LoggerJNI.Free(CLogger.getCPtr(logger), logger);
  }

  public static int LogEventNoFormat(CLogger logger, long priority, String keyword, String subkeyword, String text) {
    return LoggerJNI.LogEventNoFormat(CLogger.getCPtr(logger), logger, priority, keyword, subkeyword, text);
  }

  public static void Enable(CLogger logger) {
    LoggerJNI.Enable(CLogger.getCPtr(logger), logger);
  }

  public static void Disable(CLogger logger) {
    LoggerJNI.Disable(CLogger.getCPtr(logger), logger);
  }

  public static int IsEnabled(CLogger logger) {
    return LoggerJNI.IsEnabled(CLogger.getCPtr(logger), logger);
  }

  public static int Flush(CLogger logger) {
    return LoggerJNI.Flush(CLogger.getCPtr(logger), logger);
  }

  public static void EnableAutoFlush(CLogger logger) {
    LoggerJNI.EnableAutoFlush(CLogger.getCPtr(logger), logger);
  }

  public static void DisableAutoFlush(CLogger logger) {
    LoggerJNI.DisableAutoFlush(CLogger.getCPtr(logger), logger);
  }

  public static int IsAutoFlushEnabled(CLogger logger) {
    return LoggerJNI.IsAutoFlushEnabled(CLogger.getCPtr(logger), logger);
  }

  public static void SetThresholdPriority(CLogger logger, long thresh_val) {
    LoggerJNI.SetThresholdPriority(CLogger.getCPtr(logger), logger, thresh_val);
  }

  public static long GetThresholdPriority(CLogger logger) {
    return LoggerJNI.GetThresholdPriority(CLogger.getCPtr(logger), logger);
  }

  public static void SetDefaultPriority(CLogger logger, long pri_level) {
    LoggerJNI.SetDefaultPriority(CLogger.getCPtr(logger), logger, pri_level);
  }

  public static long GetDefaultPriority(CLogger logger) {
    return LoggerJNI.GetDefaultPriority(CLogger.getCPtr(logger), logger);
  }

  public static void SetMinSegmentSize(CLogger logger, long num_bytes) {
    LoggerJNI.SetMinSegmentSize(CLogger.getCPtr(logger), logger, num_bytes);
  }

  public static long GetMinSegmentSize(CLogger logger) {
    return LoggerJNI.GetMinSegmentSize(CLogger.getCPtr(logger), logger);
  }

  public static void EchoOn(CLogger logger) {
    LoggerJNI.EchoOn(CLogger.getCPtr(logger), logger);
  }

  public static void EchoOff(CLogger logger) {
    LoggerJNI.EchoOff(CLogger.getCPtr(logger), logger);
  }

  public static int IsEchoOn(CLogger logger) {
    return LoggerJNI.IsEchoOn(CLogger.getCPtr(logger), logger);
  }

  public static void SetEchoToStdout(CLogger logger) {
    LoggerJNI.SetEchoToStdout(CLogger.getCPtr(logger), logger);
  }

  public static void SetEchoToStderr(CLogger logger) {
    LoggerJNI.SetEchoToStderr(CLogger.getCPtr(logger), logger);
  }

  public static void SetPreLines(CLogger logger, long pre_lines) {
    LoggerJNI.SetPreLines(CLogger.getCPtr(logger), logger, pre_lines);
  }

  public static void SetPostLines(CLogger logger, long post_lines) {
    LoggerJNI.SetPostLines(CLogger.getCPtr(logger), logger, post_lines);
  }

  public static void SetNewLines(CLogger logger, long pre_lines, long post_lines) {
    LoggerJNI.SetNewLines(CLogger.getCPtr(logger), logger, pre_lines, post_lines);
  }

  public static long GetPreLines(CLogger logger) {
    return LoggerJNI.GetPreLines(CLogger.getCPtr(logger), logger);
  }

  public static long GetPostLines(CLogger logger) {
    return LoggerJNI.GetPostLines(CLogger.getCPtr(logger), logger);
  }

  public static int WillLog(CLogger logger, long which_priority) {
    return LoggerJNI.WillLog(CLogger.getCPtr(logger), logger, which_priority);
  }

  public static void SetSegmentFormatString(CLogger logger, String format_string) {
    LoggerJNI.SetSegmentFormatString(CLogger.getCPtr(logger), logger, format_string);
  }

  public static void Android_SetCustomPrintFunctionToAndroidLog(CLogger logger) {
    LoggerJNI.Android_SetCustomPrintFunctionToAndroidLog(CLogger.getCPtr(logger), logger);
  }

  public static void Android_ClearCustomPrintFunctions(CLogger logger) {
    LoggerJNI.Android_ClearCustomPrintFunctions(CLogger.getCPtr(logger), logger);
  }

  public static int LogEvent(CLogger logger, long priority, String keyword, String subkeyword, String... string_array) {
    return LoggerJNI.LogEvent(CLogger.getCPtr(logger), logger, priority, keyword, subkeyword, string_array);
  }

}
